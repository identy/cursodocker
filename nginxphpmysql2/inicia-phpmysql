#!/usr/bin/env python
# -*- coding: utf-8 -*-
import os, sys
import subprocess

# Start docker-machine.

print "Esto tardara unos minutos..."
try:
    output = subprocess.check_output(["docker-machine", "ls"])
    print "docker-machine ls | wc -l", "= ", output
    lines=output.count ('\n')
    print "lineas", lines
    if lines == 0:
        print "Creando maquina virtual"
        #docker-machine -s /dockermachine-vm create --driver virtualbox default
        print "docker-machine","-s","'/dockermachine-vm'","create","--driver","virtualbox","default"
        path = '/dockermachine-vm'
        os.mkdir(path, 0777 )
        output = subprocess.check_output(["docker-machine","-s", "'/dockermachine-vm'","create", "--driver","virtualbox","default"])
        print output
#        s = subprocess.Popen("eval $(docker-machine env default)", stdout=subprocess.PIPE, shell=True)
    if lines == 1:
        print "Iniciando maquina virtual"
        print "docker-machine start"
        output = subprocess.check_output(["docker-machine", "start"])
        print output
        output = subprocess.check_output(["docker-machine", "env", "default"])
        os.environ['LD_LIBRARY_PATH'] = 'my_path'
    if lines >= 2:
        print "Maquina virtual ya iniciada"
except:
    print "Ups!, algo fue mal. Contacte administrador"

# Build docker image from Dockerfile
os.system ('eval $(docker-machine env default)')
os.chdir(/dockermachine-vm)
os.system('git clone https://github.com/etsiiull/docker-phpmysqldev.git')
os.chdir('/dockermachine-vm/docker-phpmysqldev')
os.system('docker build . -t esit-php-mysql')

#/home/ull.es/3b/pgonyan/.docker -- 1G!

# Run docker image
print "docker run -ti --rm -p 9050:80 --name esit-php-mysql  esit-php-mysql"
#os.system('docker run -ti --rm -p 9050:80 --name esit-php-mysql-`id -u $USER`  esit-php-mysql')

# Open web browser, terminal, mysql

#echo Abra un navegador en http://`docker-machine ip`:91234
#echo Abra un navegador en http://`docker-machine ip`:91234
